# JMH version: 1.35
# VM version: JDK 11.0.15, OpenJDK 64-Bit Server VM, 11.0.15+10-8257145
# VM invoker: /opt/java-11/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.salesforce.hbase.BenchmarkAircompressorZstd.test

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: Prepared 2680 blocks (258126022 bytes total) from blockdata.zip
1136.946 ms/op
# Warmup Iteration   2: 1108.477 ms/op
# Warmup Iteration   3: 1107.662 ms/op
Iteration   1: 1107.711 ms/op
Iteration   2: 1108.444 ms/op
Iteration   3: Compressed 258126022 -> 55129189 bytes, (78.642529%)
1108.645 ms/op


Result "com.salesforce.hbase.BenchmarkAircompressorZstd.test":
  1108.267 ±(99.9%) 8.969 ms/op [Average]
  (min, avg, max) = (1107.711, 1108.267, 1108.645), stdev = 0.492
  CI (99.9%): [1099.297, 1117.236] (assumes normal distribution)


# Run complete. Total time: 00:01:06

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                        Mode  Cnt     Score   Error  Units
BenchmarkAircompressorZstd.test  avgt    3  1108.267 ± 8.969  ms/op
